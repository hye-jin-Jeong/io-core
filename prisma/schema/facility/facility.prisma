// ============================================================================
// FACILITY RELATED MODELS
// ============================================================================

model Facility {
  id          String   @id @default(cuid())
  name        String
  address     String?
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  managers          UserFacility[]
  groups            Group[]
  devices           Device[]
  attendanceRecords AttendanceRecord[]

  @@map("facilities")
}

model Group {
  id          String   @id @default(cuid())
  name        String
  description String?
  facilityId  String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  facility Facility    @relation(fields: [facilityId], references: [id], onDelete: Cascade)
  members  UserGroup[]

  @@map("groups")
}

model Device {
  id           String       @id @default(cuid())
  name         String
  description  String?
  serialNumber String?      @unique
  facilityId   String
  status       DeviceStatus @default(OFFLINE)
  lastSeenAt   DateTime?
  isActive     Boolean      @default(true)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  // Relations
  facility          Facility           @relation(fields: [facilityId], references: [id], onDelete: Cascade)
  tags              Tag[]
  attendanceRecords AttendanceRecord[]

  @@map("devices")
}

model Tag {
  id         String   @id @default(cuid())
  identifier String
  type       TagType
  deviceId   String
  userId     String?
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  device            Device             @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  user              User?              @relation(fields: [userId], references: [id], onDelete: SetNull)
  attendanceRecords AttendanceRecord[]

  // 하이브리드 접근: 기본 안전망으로 DB 레벨 제약
  @@unique([identifier, type])
  @@map("tags")
}